import{l as s}from"./productData-BCPXBWLg.js";import{o as l,J as d,g}from"./utils-QdhfMUCY.js";class r extends Error{}r.prototype.name="InvalidTokenError";function f(e){return decodeURIComponent(atob(e).replace(/(.)/g,(o,t)=>{let n=t.charCodeAt(0).toString(16).toUpperCase();return n.length<2&&(n="0"+n),"%"+n}))}function p(e){let o=e.replace(/-/g,"+").replace(/_/g,"/");switch(o.length%4){case 0:break;case 2:o+="==";break;case 3:o+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return f(o)}catch{return atob(o)}}function u(e,o){if(typeof e!="string")throw new r("Invalid token specified: must be a string");o||(o={});const t=o.header===!0?0:1,n=e.split(".")[t];if(typeof n!="string")throw new r(`Invalid token specified: missing part #${t+1}`);let c;try{c=p(n)}catch(a){throw new r(`Invalid token specified: invalid base64 for part #${t+1} (${a.message})`)}try{return JSON.parse(c)}catch(a){throw new r(`Invalid token specified: invalid json for part #${t+1} (${a.message})`)}}const i="so-token";async function m(e,o){try{let t=await s(e);console.log(t),l(i,t),window.location.href=o}catch(t){d(t.message)}}function v(){let e=g(i);if(console.log(e),h(e.accessToken))return e.accessToken;{localStorage.removeItem(i);const t=window.location;window.location=`/login/index.html?redirect=${t.pathname}`,console.log("token expired, redirecting...")}}function h(e){if(e){const o=u(e);let t=new Date;return o.exp*1e3<t.getTime()?(console.log("Token is expired"),!1):(console.log("Token is valid"),!0)}else return!1}export{v as c,m as l};
