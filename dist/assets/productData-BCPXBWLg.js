async function n(t){if(t.ok)return await t.json();throw{name:"servicesError",message:await t.json()}}async function o(t="tents"){const e=await fetch(`undefinedproducts/search/${t}`);return(await n(e)).Result}async function a(t){const e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return await fetch("undefinedcheckout/",e).then(n)}async function r(t){const e=await fetch(`undefinedproduct/${t}`);return(await n(e)).Result}async function c(t){const e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return await fetch("undefinedlogin",e).then(n)}async function i(t){console.log(`getting orders with token: ${t}`);const e={method:"GET",headers:{Authorization:`Bearer ${t}`}};return await fetch("undefinedorders",e).then(n)}export{i as a,r as f,o as g,c as l,a as s};
